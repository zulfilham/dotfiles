#!/data/data/com.termux/files/usr/bin/bash

function show_help() {
cat << EOF
Usage: bash $1 copy (termux | internal) [<rsync-options>]
   or: bash $1 copy external [rsync-options]
   or: bash $1 sync gameguardian_scripts [<rsync-options>]
   or: bash $1 sync audios [rsync-options]
   or: bash $1 remove garbage [rm-options]
EOF
}

function cronlog() {
   if (($# == 0)); then
cat >> ~/.cronlog << EOF
------------------------------------------------------------------------

Command: $COMMAND
Date:    $DATE
Status:  RUNNING
Message: $MESSAGE

EOF
      find ~/.cronlog -size +262144c -exec sed --null-data --in-place 's/-\{72\}/\x00/g; s/^\x00[^\x00]\+//; s/\x00/------------------------------------------------------------------------/g' {} +;
   else
      COMMAND="${COMMAND//\\/\\\\}";
      COMMAND="${COMMAND//\&/\\\&}";
      COMMAND="${COMMAND//$'\n'/\\x0a}";
      MESSAGE="${MESSAGE//\\/\\\\}";
      MESSAGE="${MESSAGE//\&/\\\&}";
      MESSAGE="${MESSAGE//$'\n'/\\x0a}";
      sed --null-data --in-place \
      "s/-\{72\}/\x00/g; s/Command:[[:space:]]*[^\x00]\+[[:space:]]*Date:[[:space:]]*$DATE[^\x00]*[[:space:]]*Status:[[:space:]]*RUNNING[[:space:]]*Message:[[:space:]]*[^\x00]*/Command: ${COMMAND//\//\\\/}\x0aDate:    $DATE -> $(date "+%F %T %Z")\x0aStatus:  $1\x0aMessage: ${MESSAGE//\//\\\/}\x0a\x0a/; s/\x00/------------------------------------------------------------------------/g" \
      -- ~/.cronlog;
   fi;
}

function ssh_connect() {
   MESSAGE="$(ssh "$COMPUTER_ADDRESS" exit 2>&1)";

   if (($? > 0)); then
      echo -e "Fatal: SSH connection cannot be established\n$MESSAGE" 1>&2;
      return 1;
   fi;
}

function copy() {
   if ssh_connect; then
      MESSAGE="$(rsync --archive --mkpath "${EXTRA_OPTIONS[@]}" "$@" -- "$SOURCE/" "$COMPUTER_ADDRESS:\"${DESTINATION//\"/\\\"}/\"" 2>&1)" || return 1;
   else
      return 1;
   fi;
}

function sync() {
   if ssh_connect; then
      MESSAGE="$(rsync --archive --mkpath --update "${EXTRA_OPTIONS[@]}" "$@" -- "$SOURCE/" "$COMPUTER_ADDRESS:\"${DESTINATION//\"/\\\"}/\"" 2>&1)" || return 1;
      MESSAGE="$(rsync --archive --mkpath --update "${EXTRA_OPTIONS[@]}" "$@" -- "$COMPUTER_ADDRESS:\"${DESTINATION//\"/\\\"}/\"" "$SOURCE/" 2>&1)" || return 1;
   else
      return 1;
   fi;
}

function remove() {
   MESSAGE="$(rm --force --recursive "${EXTRA_OPTIONS[@]}" "$@" -- "${SOURCE[@]}" 2>&1)" || return 1;
}

function main() {
   if (($# < 1)); then
      show_help "$0";
      return 0;
   fi;

   COMMAND="bash -l $0 $@";
   DATE=$(date "+%F %T %Z");
   STATUS=RUNNING;

   case "$1" in
   copy)
      if (($# < 2)); then
         echo "Fatal: No object specified" 1>&2;
         return 1;
      fi;

      case "$2" in
      termux)
         SOURCE=$FILES;
         DESTINATION=/d/Zulfilham/Backups/Termux/files;
         EXTRA_OPTIONS=(--exclude=/{home/.suroot,usr/var/run});
         ;;
      internal)
         SOURCE=$INTERNAL;
         DESTINATION="/d/Zulfilham/Backups/Internal Storage/files";
         EXTRA_OPTIONS=(--exclude=/{"db????*??*??".{sql,db},Diary});
         ;;
      external)
         if [ -v EXTERNAL ]; then
            SOURCE=$EXTERNAL;
            DESTINATION="/d/Zulfilham/Backups/External Storage/files";
         else
            MESSAGE="Fatal: SD card is not installed on this device";
            echo "$MESSAGE" 1>&2;
            STATUS=FAILURE;
         fi;
         ;;
      *)
         echo "Fatal: invalid object '$2'";
         return 1;
         ;;
      esac;
      ;;
   sync)
      if (($# < 2)); then
         echo "Fatal: No object specified" 1>&2;
         return 1;
      fi;

      case "$2" in
      gameguardian_scripts)
         SOURCE="$INTERNAL/GameGuardian Scripts";

         if [ -d "$SOURCE" ]; then
            DESTINATION="/d/Zulfilham/Repositories/Zulfilham/GameGuardian Scripts";
            EXTRA_OPTIONS=(--exclude=/.git);
         else
            MESSAGE="Fatal: '${SOURCE//\'/\'\\\'\'}': Not a directory";
            echo "$MESSAGE" 1>&2;
            STATUS=FAILURE;
         fi;
         ;;
      audios)
         if [ -v EXTERNAL ]; then
            SOURCE=$EXTERNAL_STORAGE/Audios;

            if [ -d "$SOURCE" ]; then
               DESTINATION=/e/Zulfilham/Audios;
            else
               MESSAGE="Fatal: '${SOURCE//\'/\'\\\'\'}': Not a directory";
               echo "$MESSAGE" 1>&2;
               STATUS=FAILURE;
            fi;
         else
            MESSAGE="Fatal: SD card is not installed on this device";
            echo "$MESSAGE" 1>&2;
            STATUS=FAILURE;
         fi;
         ;;
      *)
         echo "Fatal: invalid object '$2'";
         return 1;
         ;;
      esac;
      ;;
   remove)
      if (($# < 2)); then
         echo "Fatal: No object specified" 1>&2;
         return 1;
      fi;

      case "$2" in
      garbage)
         SOURCE=(/storage/emulated/0/{.dlprovider,.fe_tmp,.profig.os,DCIM/.thumbnails,MIUI/{Gallery,debug_log},WhatsApp/Databases/msgstore-????-??-??.1.db.crypt14,dctp,did,wlan_logs});
         ;;
      *)
         echo "Fatal: Invalid object '$2'";
         return 1;
         ;;
      esac;
      ;;
   *)
      echo "Fatal: Invalid command '$1'" 1>&2;
      return 1;
   esac;

   cronlog;

   if [ $STATUS == RUNNING ]; then
      $1 "${@:3}" && STATUS=SUCCESS || STATUS=FAILURE;
   fi;
   cronlog $STATUS;
   [ $STATUS == SUCCESS ] && return 0 || return 1;
}

main "$@";
