#!/data/data/com.termux/files/usr/bin/bash

# Personal functions
function copy_termux() {
   rsync --archive "$@" -- $FILES "$COMPUTER_ADDRESS:/d/Zulfilham/Backups/Termux";
}

function copy_internal() {
   rsync --archive "$@" -- $INTERNAL/ "$COMPUTER_ADDRESS:\"/d/Zulfilham/Backups/Internal Storage/files/\"";
}

function copy_external() {
   rsync --archive "$@" -- $EXTERNAL/ "$COMPUTER_ADDRESS:\"/d/Zulfilham/Backups/External Storage/files/\"";
}

function sync_gameguardian_scripts() {
   rsync --archive --update "$@" -- "$INTERNAL/GameGuardian Scripts" "$COMPUTER_ADDRESS:/d/Zulfilham/Repositories/Zulfilham";
   rsync --archive --update "$@" -- "$COMPUTER_ADDRESS:\"/d/Zulfilham/Repositories/Zulfilham/GameGuardian Scripts\"" $INTERNAL;
}

function sync_audios() {
   rsync --archive --update "$@" -- $EXTERNAL_STORAGE/Audios "$COMPUTER_ADDRESS:/e/Zulfilham";
   rsync --archive --update "$@" -- "$COMPUTER_ADDRESS:/e/Zulfilham/Audios" $EXTERNAL_STORAGE;
}

function remove_garbage() {
   rm --force --recursive -- /storage/emulated/0/{.dlprovider,DCIM/.thumbnails,MIUI/{Gallery,debug_log},WhatsApp/Databases/msgstore-????-??-??.1.db.crypt14,dctp,did,wlan_logs};
}

function mirror_termux() {
   rsync --delete --archive "$@" -- $FILES "$COMPUTER_ADDRESS:/d/Zulfilham/Backups/Termux";
}

function mirror_internal() {
   rsync --delete --archive "$@" -- $INTERNAL/ "$COMPUTER_ADDRESS:\"/d/Zulfilham/Backups/Internal Storage/files/\"";
}

function mirror_external() {
   rsync --delete --archive "$@" -- $EXTERNAL/ "$COMPUTER_ADDRESS:\"/d/Zulfilham/Backups/External Storage/files/\"";
}

function mirror_gameguardian_scripts() {
   rsync --delete --archive "$@" -- "$INTERNAL/GameGuardian Scripts" "$COMPUTER_ADDRESS:/d/Zulfilham/Repositories/Zulfilham";
}

function mirror_audios() {
   rsync --delete --archive "$@" -- $EXTERNAL_STORAGE/Audios "$COMPUTER_ADDRESS:/e/Zulfilham";
}

# General functions
# Usage: compare <file1> <file2>
# Check whether 2 files are identical
function compare() {
   if (($# != 2)); then
      echo "Fatal: Expected exactly 2 arguments, $# given" 1>&2;
      return 1;
   elif [ ! -e "$1" ]; then
      echo "Fatal: '${1//\'/\'\\\'\'}': No such file or directory" 1>&2;
      return 1;
   elif [ ! -e "$2" ]; then
      echo "Fatal: '${2//\'/\'\\\'\'}': No such file or directory" 1>&2;
      return 1;
   elif [ -d "$1" ]; then
      echo "Fatal: '${2//\'/\'\\\'\'}': Is a directory" 1>&2;
      return 1;
   elif [ -d "$2" ]; then
      echo "Fatal: '${2//\'/\'\\\'\'}': Is a directory" 1>&2;
      return 1;
   fi;
   cmp --silent -- "$1" "$2" && echo $'\x1b[32midentical\x1b[0m' 1>&2 || echo $'\x1b[31mdifferent\x1b[0m' 1>&2;
}

# Usage: apk-install <apk-file>
# Install an application in Android
function apk-install() {
   if (($# != 1)); then
      echo "Fatal: Expected exactly 1 argument, $# given" 1>&2;
      return 1;
   elif [ ! -e "$1" ]; then
      echo "Fatal: '${1//\'/\'\\\'\'}': No such file or directory" 1>&2;
      return 1;
   elif [ ! -f "$1" ]; then
      echo "Fatal: '${2//\'/\'\\\'\'}': Not a regular file" 1>&2;
      return 1;
   fi;
   am start -n com.google.android.packageinstaller/com.android.packageinstaller.PackageInstallerActivity -d "file://$(realpath "$1")" > /dev/null;
}

# Usage: apk-uninstall <package-name>
# Uninstall an application in Android
function apk-uninstall() {
   if (($# != 1)); then
      echo "Fatal: Expected exactly 1 argument, $# given" 1>&2;
      return 1;
   fi;
   am start -n com.google.android.packageinstaller/com.android.packageinstaller.UninstallerActivity -d "$1" > /dev/null;
}

# set_title [arg...]
# Set terminal title
function set_title() {
   echo -en "\e]0;$@\007";
}
